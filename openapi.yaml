openapi: 3.0.0
info:
  title: Delilah API
  description: Esta es la API de Delilah Resto. A continuación te explicamos las funcionalidades.
  contact:
    email: melisaguevarav@hotmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: /
tags:
- name: Administrador
  description: Funcionalidades reservadas para el administrador
- name: Usuarios Registrados
  description: Funcionalidades para usuarios registrados
- name: Endpoints Libres
  description: Endpoints con acceso para todos
paths:
  /usuarios:
    get:
      tags:
      - Administrador
      summary: Accedé a todos los usuarios registrados
      description: Trae una lista con todos los usuarios registrados
      parameters:
      - name: Authorization
        in: header
        description: Token obtenido al realizar el login desde la cuenta de administrador.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: aaSSDdFr4567 AREGLAR
      responses:
        "200":
          description: lista de usuarios registrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
        "400":
          description: Primero debes iniciar sesión
        "403":
          description: Acceso denegado. Sólo administradores
    post:
      tags:
      - Endpoints Libres
      summary: Crea un nuevo usuario
      description: Si se proporcionan los datos requeridos y el nombre de usuario
        proporcionado está disponible, se creará un nuevo usuario en el sistema.
      requestBody:
        description: Datos del usuario a crear
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post-Usuario'
      responses:
        "201":
          description: El usuario ha sido creado con éxito
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /login:
    post:
      tags:
      - Endpoints Libres
      summary: Autentica usuarios
      description: Dado un nombre de usuario y una contraseña, corrobora los datos
        con la base de datos. De existir el usuario y estar bien los datos, devuelve
        el token necesario para futuras autenticaciones.
      requestBody:
        description: Nombre de usuario y contraseña
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioLogin'
      responses:
        "200":
          description: Token para futuras autenticaciones
        "400":
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
  /productos:
    get:
      tags:
      - Usuarios Registrados
      - Administrador
      summary: Accede a los productos disponibles
      description: Trae una lista con todos los productos disponibles
      parameters:
      - name: Authorization
        in: header
        description: Token obtenido al realizar el login.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: aaSSDdFr4567 AREGLAR
      responses:
        "200":
          description: lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producto'
        "401":
          description: Primero debes iniciar sesión
        "403":
          description: Token inválido
    post:
      tags:
      - Administrador
      summary: Crea un nuevo producto
      description: Dado un nombre de producto y un precio, lo agrega a la lista de
        productos disponibles.
      requestBody:
        description: Nombre y precio del producto a agregar
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producto'
      responses:
        "200":
          description: Se ha agregado el nuevo producto a la base de datos
        "400":
          description: Primero debes iniciar sesión
        "403":
          description: Acceso denegado. Sólo administradores
  /productos/{id}:
    delete:
      tags:
      - Administrador
      summary: Elimina un producto
      description: Dado el id de un producto, lo elimina de la base de datos.
      parameters:
      - name: id
        in: path
        description: ID del producto a eliminar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      responses:
        "200":
          description: Se ha eliminado el producto
        "400":
          description: Primero debes iniciar sesión
        "403":
          description: Acceso denegado. Sólo administradores
    patch:
      tags:
      - Administrador
      summary: Edita un producto existente.
      description: Dado el id de un producto, un nuevo nombre y/o precio, se actualiza
        el registro en la base de datos.
      parameters:
      - name: id
        in: path
        description: ID del producto a eliminar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      requestBody:
        description: Nuevo nombre y/o nuevo precio del producto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActualizarProducto'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Primero debes iniciar sesión
        "403":
          description: Acceso denegado. Sólo administradores
  /pedidos:
    get:
      tags:
      - Administrador
      summary: Accede a todos los pedidos
      description: Trae una lista con todos los pedidos registrados en la base de
        datos. Por cada pedido, devuelve tantos registros como productos diferentes
        posea.
      parameters:
      - name: Authorization
        in: header
        description: Token obtenido al realizar el login desde la cuenta del administrador.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: aaSSDdFr4567
      responses:
        "200":
          description: lista de pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoAdmin'
        "401":
          description: Primero debes iniciar sesión
        "403":
          description: Acceso denegado. Sólo administradores
    post:
      tags:
      - Usuarios Registrados
      summary: Crea un nuevo pedido
      description: Dados los datos requeridos, realiza un nuevo pedido.
      requestBody:
        description: Los productos se informan en forma de lista con los ID de los
          productos pedidos por el usuario, acompañado de un array de las cantidades
          de los mismos. Las posiciones deben corresponderse. Es necesario además
          aclarar la dirección de entrega y el método de pago.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PedidoUsuario'
      responses:
        "200":
          description: El pedido fue realizado con éxito
        "401":
          description: Primero debes iniciar sesión
        "403":
          description: Token inválido
  /pedidos/{id}:
    patch:
      tags:
      - Administrador
      summary: Edita el estado de un pedido.
      description: Dado el id de un pedido y un nuevo estado, se actualiza el registro
        en la base de datos.
      parameters:
      - name: id
        in: path
        description: ID del pedido a actualizar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      requestBody:
        description: Nuevo estado del pedido
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActualizarPedido'
      responses:
        "200":
          description: El estado del pedido fue modificado
        "401":
          description: Primero debes iniciar sesión
        "403":
          description: Acceso denegado. Sólo administradores
components:
  schemas:
    Post-Usuario:
      type: object
      properties:
        nombre_usuario:
          type: string
          example: pepep1994
        contraseña:
          type: string
          example: contraseña234
        nombre:
          type: string
          example: Pepe
        apellido:
          type: string
          example: Perez
        mail:
          type: string
          example: pepe@perez.com
        telefono:
          type: string
          example: "911123456"
    Usuario:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombre_usuario:
          type: string
          example: pepep1994
        contraseña:
          type: string
          example: sha1$d65fa50$b19fc98aa63160e13cad3e2d1bd744e
        nombre:
          type: string
          example: Pepe
        apellido:
          type: string
          example: Perez
        mail:
          type: string
          example: pepe@perez.com
        telefono:
          type: string
          example: "911123456"
        admin:
          type: integer
          example: 0
    UsuarioLogin:
      type: object
      properties:
        nombre_usuario:
          type: string
          example: pepep1994
        contraseña:
          type: string
          example: contraseña234
    Producto:
      type: object
      properties:
        nombre:
          type: string
          example: Hamburguesa
        precio:
          type: integer
          example: 400
    ActualizarProducto:
      type: object
      properties:
        nuevo_nombre:
          type: string
          example: Hamburguesa Clásica
        nuevo_precio:
          type: integer
          example: 450
    PedidoUsuario:
      type: object
      properties:
        productos:
          type: array
          example:
          - 1
          - 3
          - 5
          items:
            type: integer
        cantidades:
          type: array
          example:
          - 1
          - 1
          - 2
          items:
            type: integer
        dirección:
          type: string
          example: Avenida Corrientes 235
        metodo_pago:
          type: string
          example: Efectivo
    PedidoAdmin:
      type: object
      properties:
        id:
          type: integer
          example: 1
        estado:
          type: string
          example: En Preparación
          default: Nuevo
        usuario_id:
          type: integer
          example: 4
        direccion:
          type: string
          example: Av Corrientes 245
        total:
          type: integer
          example: 2500
        metodo_pago:
          type: string
          example: Débito
        hora:
          type: string
          example: 2020-03-25T00:48:08.000Z
        nombre_producto:
          type: string
          example: Hamburguesa
        cantidad:
          type: integer
          example: 3
    ActualizarPedido:
      type: object
      properties:
        nuevo_estado:
          type: string
          example: Cancelado
    FaltanDatos:
      type: string
      example: Hay campos obligatorios vacíos
    UsuarioNoDisp:
      type: string
      example: El nombre de usuario no está disponible
    NoUsuario:
      type: string
      example: Usuario Inexistente
    NoContrasena:
      type: string
      example: Contraseña incorrecta
    NoAutentica:
      type: string
      example: Ha ocurrido un error autenticando
    CambiosOK:
      type: string
      example: Se realizaron los cambios
    NuevoNombre:
      type: string
      example: El nombre del producto ha sido actualizado
    NuevoPrecio:
      type: string
      example: El precio del producto ha sido actualizado
    inline_response_400:
      oneOf:
      - $ref: '#/components/schemas/UsuarioNoDisp'
      - $ref: '#/components/schemas/FaltanDatos'
    inline_response_400_1:
      oneOf:
      - $ref: '#/components/schemas/NoUsuario'
      - $ref: '#/components/schemas/NoContrasena'
      - $ref: '#/components/schemas/NoAutentica'
    inline_response_200:
      oneOf:
      - $ref: '#/components/schemas/CambiosOK'
      - $ref: '#/components/schemas/NuevoNombre'
      - $ref: '#/components/schemas/NuevoPrecio'
